{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC165.sol",
    "9": "interfaces/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC165.sol",
    "exportedSymbols": {
      "ERC165": [
        54
      ],
      "IERC165": [
        932
      ]
    },
    "id": 55,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "absolutePath": "interfaces/IERC165.sol",
        "file": "../interfaces/IERC165.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 55,
        "sourceUnit": 933,
        "src": "58:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 932,
              "src": "114:7:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "114:7:0"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 54,
        "linearizedBaseContracts": [
          54,
          932
        ],
        "name": "ERC165",
        "nameLocation": "104:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "160:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 54,
            "src": "128:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "136:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "128:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 6,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "146:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "201:83:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "737570706f727473496e746572666163652862797465733429",
                                "id": 15,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "247:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                                  "typeString": "literal_string \"supportsInterface(bytes4)\""
                                },
                                "value": "supportsInterface(bytes4)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                                  "typeString": "literal_string \"supportsInterface(bytes4)\""
                                }
                              ],
                              "id": 14,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "237:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 16,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "237:38:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "230:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": {
                            "id": 12,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "230:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "230:46:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 11,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "211:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "211:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19,
                  "nodeType": "ExpressionStatement",
                  "src": "211:66:0"
                }
              ]
            },
            "id": 21,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "198:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:0:0"
            },
            "scope": 54,
            "src": "187:97:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              931
            ],
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "389:57:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 29,
                      "name": "_supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "406:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 31,
                    "indexExpression": {
                      "id": 30,
                      "name": "interfaceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "427:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "406:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28,
                  "id": 32,
                  "nodeType": "Return",
                  "src": "399:40:0"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 34,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "299:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 25,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "365:8:0"
            },
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "interfaceID",
                  "nameLocation": "333:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "326:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "316:34:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "383:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "382:6:0"
            },
            "scope": 54,
            "src": "290:156:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "509:130:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 40,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "527:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30786666666666666666",
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "542:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967295_by_1",
                            "typeString": "int_const 4294967295"
                          },
                          "value": "0xffffffff"
                        },
                        "src": "527:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420696e746572666163652072657175657374",
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "554:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eebc577de631925927a68635dea015e2f637528bac8459add1104ab87d6f49f4",
                          "typeString": "literal_string \"Invalid interface request\""
                        },
                        "value": "Invalid interface request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eebc577de631925927a68635dea015e2f637528bac8459add1104ab87d6f49f4",
                          "typeString": "literal_string \"Invalid interface request\""
                        }
                      ],
                      "id": 39,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "519:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "519:63:0"
                },
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46,
                        "name": "_supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "592:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 48,
                      "indexExpression": {
                        "id": 47,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "613:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "592:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "628:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "592:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "592:40:0"
                }
              ]
            },
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterface",
            "nameLocation": "461:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "487:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "480:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "479:20:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:0:0"
            },
            "scope": 54,
            "src": "452:187:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 55,
        "src": "95:546:0",
        "usedErrors": []
      }
    ],
    "src": "32:610:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5061003a7f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e261003f565b6100c2565b6001600160e01b0319808216141561009d5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420696e74657266616365207265717565737400000000000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60d0806100d06000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b60576038366004606b565b6001600160e01b03191660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215607c57600080fd5b81356001600160e01b031981168114609357600080fd5b939250505056fea26469706673582212206c7884aea9bab500ed355e0bd9993606ab760025cabdc203957bc95bf952187d64736f6c634300080a0033",
  "bytecodeSha1": "ea68e68d9869d067be51254453f7caa0a4cccb5d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "ERC165",
  "coverageMap": {
    "branches": {
      "0": {},
      "9": {}
    },
    "statements": {
      "0": {
        "ERC165.supportsInterface": {
          "0": [
            399,
            439
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "IERC165"
  ],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b60576038366004606b565b6001600160e01b03191660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215607c57600080fd5b81356001600160e01b031981168114609357600080fd5b939250505056fea26469706673582212206c7884aea9bab500ed355e0bd9993606ab760025cabdc203957bc95bf952187d64736f6c634300080a0033",
  "deployedSourceMap": "95:546:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;290:156;;;;;;:::i;:::-;-1:-1:-1;;;;;;406:33:0;383:4;406:33;;;;;;;;;;;;;;290:156;;;;470:14:13;;463:22;445:41;;433:2;418:18;290:156:0;;;;;;;14:286:13;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    95,
    641
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x57 PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH1 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x7884AEA9BAB500ED355E0BD999 CALLDATASIZE MOD 0xAB PUSH23 0x25CABDC203957BC95BF952187D64736F6C634300080A STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "POP",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "LT",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "23": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "24": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "27": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "SHR",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FFC9A7"
    },
    "36": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2D"
    },
    "39": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "40": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "first_revert": true,
      "fn": null,
      "offset": [
        95,
        641
      ],
      "op": "REVERT",
      "path": "0"
    },
    "45": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "46": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x57"
    },
    "48": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x38"
    },
    "50": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "51": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "53": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6B"
    },
    "55": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        290,
        446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "56": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "57": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "59": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "61": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "63": {
      "op": "SHL"
    },
    "64": {
      "op": "SUB"
    },
    "65": {
      "op": "NOT"
    },
    "66": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "AND",
      "path": "0",
      "statement": 0
    },
    "67": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        383,
        387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "69": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "70": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "71": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "72": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "74": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "75": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "76": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "77": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "79": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "80": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "81": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "82": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "84": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "AND",
      "path": "0"
    },
    "85": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "86": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "87": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "88": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "90": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "91": {
      "op": "SWAP1"
    },
    "92": {
      "op": "ISZERO"
    },
    "93": {
      "op": "ISZERO"
    },
    "94": {
      "op": "DUP2"
    },
    "95": {
      "op": "MSTORE"
    },
    "96": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "98": {
      "op": "ADD"
    },
    "99": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "101": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "102": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "DUP1",
      "path": "0"
    },
    "103": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "104": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "SUB",
      "path": "0"
    },
    "105": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "106": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "RETURN",
      "path": "0"
    },
    "107": {
      "op": "JUMPDEST"
    },
    "108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "112": {
      "op": "DUP3"
    },
    "113": {
      "op": "DUP5"
    },
    "114": {
      "op": "SUB"
    },
    "115": {
      "op": "SLT"
    },
    "116": {
      "op": "ISZERO"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "119": {
      "op": "JUMPI"
    },
    "120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "122": {
      "op": "DUP1"
    },
    "123": {
      "op": "REVERT"
    },
    "124": {
      "op": "JUMPDEST"
    },
    "125": {
      "op": "DUP2"
    },
    "126": {
      "op": "CALLDATALOAD"
    },
    "127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "133": {
      "op": "SHL"
    },
    "134": {
      "op": "SUB"
    },
    "135": {
      "op": "NOT"
    },
    "136": {
      "op": "DUP2"
    },
    "137": {
      "op": "AND"
    },
    "138": {
      "op": "DUP2"
    },
    "139": {
      "op": "EQ"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "142": {
      "op": "JUMPI"
    },
    "143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "145": {
      "op": "DUP1"
    },
    "146": {
      "op": "REVERT"
    },
    "147": {
      "op": "JUMPDEST"
    },
    "148": {
      "op": "SWAP4"
    },
    "149": {
      "op": "SWAP3"
    },
    "150": {
      "op": "POP"
    },
    "151": {
      "op": "POP"
    },
    "152": {
      "op": "POP"
    },
    "153": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "bbb591ce4d8fa30763affe651fb61453a6b9dc15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"../interfaces/IERC165.sol\";\n\ncontract ERC165 is IERC165 {\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor() {\n        _registerInterface(bytes4(keccak256(\"supportsInterface(bytes4)\")));\n    }\n\n    function supportsInterface(\n        bytes4 interfaceID\n    ) external view override returns (bool) {\n        return _supportedInterfaces[interfaceID];\n    }\n\n    function _registerInterface(bytes4 interfaceId) internal {\n        require(interfaceId != 0xffffffff, \"Invalid interface request\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n",
  "sourceMap": "95:546:0:-:0;;;187:97;;;;;;;;;-1:-1:-1;211:66:0;237:38;211:18;:66::i;:::-;95:546;;452:187;-1:-1:-1;;;;;;527:25:0;;;;;519:63;;;;-1:-1:-1;;;519:63:0;;216:2:13;519:63:0;;;198:21:13;255:2;235:18;;;228:30;294:27;274:18;;;267:55;339:18;;519:63:0;;;;;;;;-1:-1:-1;;;;;;592:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;592:40:0;628:4;592:40;;;452:187::o;14:349:13:-;95:546:0;;;;;;",
  "sourcePath": "contracts/ERC165.sol",
  "type": "contract"
}