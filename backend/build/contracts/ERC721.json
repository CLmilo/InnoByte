{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC165.sol",
    "1": "contracts/ERC721.sol",
    "10": "interfaces/IERC721.sol",
    "7": "contracts/libraries/Counters.sol",
    "8": "contracts/libraries/SafeMath.sol",
    "9": "interfaces/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC721.sol",
    "exportedSymbols": {
      "Counters": [
        789
      ],
      "ERC165": [
        54
      ],
      "ERC721": [
        372
      ],
      "IERC165": [
        932
      ],
      "IERC721": [
        974
      ],
      "SafeMath": [
        922
      ]
    },
    "id": 373,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 56,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:1"
      },
      {
        "absolutePath": "contracts/ERC165.sol",
        "file": "./ERC165.sol",
        "id": 57,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 373,
        "sourceUnit": 55,
        "src": "455:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC721.sol",
        "file": "../interfaces/IERC721.sol",
        "id": 58,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 373,
        "sourceUnit": 975,
        "src": "478:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Counters.sol",
        "file": "./libraries/Counters.sol",
        "id": 59,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 373,
        "sourceUnit": 790,
        "src": "514:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 60,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54,
              "src": "569:6:1"
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "569:6:1"
          },
          {
            "baseName": {
              "id": 62,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 974,
              "src": "577:7:1"
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "577:7:1"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 372,
        "linearizedBaseContracts": [
          372,
          974,
          54,
          932
        ],
        "name": "ERC721",
        "nameLocation": "559:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 66,
            "libraryName": {
              "id": 64,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 922,
              "src": "597:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "591:27:1",
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "610:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 70,
            "libraryName": {
              "id": 67,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 789,
              "src": "629:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "623:36:1",
            "typeName": {
              "id": 69,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 746,
                "src": "642:16:1"
              },
              "referencedDeclaration": 746,
              "src": "642:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 74,
            "mutability": "mutable",
            "name": "_tokenOwner",
            "nameLocation": "701:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 372,
            "src": "665:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "673:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "665:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "684:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 79,
            "mutability": "mutable",
            "name": "_ownedTokensCount",
            "nameLocation": "764:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 372,
            "src": "719:62:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$746_storage_$",
              "typeString": "mapping(address => struct Counters.Counter)"
            },
            "typeName": {
              "id": 78,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "727:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "719:36:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$746_storage_$",
                "typeString": "mapping(address => struct Counters.Counter)"
              },
              "valueType": {
                "id": 77,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 76,
                  "name": "Counters.Counter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 746,
                  "src": "738:16:1"
                },
                "referencedDeclaration": 746,
                "src": "738:16:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$746_storage_ptr",
                  "typeString": "struct Counters.Counter"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 83,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "868:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 372,
            "src": "832:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 80,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "840:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "832:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 81,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "851:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "904:234:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "62616c616e63654f662862797465733429",
                                    "id": 90,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "980:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8a7e378434598edc36d108689a030cbc9d7d465de4f74c71bae1028eed6a881b",
                                      "typeString": "literal_string \"balanceOf(bytes4)\""
                                    },
                                    "value": "balanceOf(bytes4)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_8a7e378434598edc36d108689a030cbc9d7d465de4f74c71bae1028eed6a881b",
                                      "typeString": "literal_string \"balanceOf(bytes4)\""
                                    }
                                  ],
                                  "id": 89,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "970:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 91,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "970:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "^",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "6f776e65724f662862797465733429",
                                    "id": 93,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1033:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3a6eb71757dfc6e784c1459d26270140c2c147d95ca985c80026fc5301c3eca1",
                                      "typeString": "literal_string \"ownerOf(bytes4)\""
                                    },
                                    "value": "ownerOf(bytes4)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_3a6eb71757dfc6e784c1459d26270140c2c147d95ca985c80026fc5301c3eca1",
                                      "typeString": "literal_string \"ownerOf(bytes4)\""
                                    }
                                  ],
                                  "id": 92,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1023:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1023:28:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "970:81:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "^",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "7472616e7366657246726f6d2862797465733429",
                                  "id": 97,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1084:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_22c82707ba960a14c7592ffb6b8cfaa073fed0048a84cc7fa41f6b5bd8e7f2e4",
                                    "typeString": "literal_string \"transferFrom(bytes4)\""
                                  },
                                  "value": "transferFrom(bytes4)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_22c82707ba960a14c7592ffb6b8cfaa073fed0048a84cc7fa41f6b5bd8e7f2e4",
                                    "typeString": "literal_string \"transferFrom(bytes4)\""
                                  }
                                ],
                                "id": 96,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1074:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1074:33:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "970:137:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "946:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": {
                            "id": 87,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "946:6:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "946:175:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 86,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "914:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "914:217:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "914:217:1"
                }
              ]
            },
            "id": 104,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:2:1"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "904:0:1"
            },
            "scope": 372,
            "src": "890:248:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              957
            ],
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1218:117:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 113,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "1236:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1254:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1246:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 114,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1246:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1246:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1236:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206973207a65726f",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1258:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6e179ef16e7bee0c6b8affd2dfa1778c777f55a6fff9bc6407e813a93470965",
                          "typeString": "literal_string \"Address is zero\""
                        },
                        "value": "Address is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6e179ef16e7bee0c6b8affd2dfa1778c777f55a6fff9bc6407e813a93470965",
                          "typeString": "literal_string \"Address is zero\""
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1228:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:48:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 122,
                          "name": "_ownedTokensCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "1293:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$746_storage_$",
                            "typeString": "mapping(address => struct Counters.Counter storage ref)"
                          }
                        },
                        "id": 124,
                        "indexExpression": {
                          "id": 123,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "1311:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1293:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$746_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 758,
                      "src": "1293:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$746_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$746_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 111,
                  "id": 127,
                  "nodeType": "Return",
                  "src": "1286:42:1"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1153:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 108,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1191:8:1"
            },
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1171:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1163:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1162:16:1"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1209:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1208:9:1"
            },
            "scope": 372,
            "src": "1144:191:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              964
            ],
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "1415:133:1",
              "statements": [
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1433:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 155,
                      "src": "1425:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1425:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "baseExpression": {
                      "id": 139,
                      "name": "_tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1441:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 141,
                    "indexExpression": {
                      "id": 140,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "1453:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1441:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1425:37:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 144,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "1480:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1497:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1489:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 145,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1489:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1489:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1480:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206973207a65726f",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1501:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6e179ef16e7bee0c6b8affd2dfa1778c777f55a6fff9bc6407e813a93470965",
                          "typeString": "literal_string \"Address is zero\""
                        },
                        "value": "Address is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6e179ef16e7bee0c6b8affd2dfa1778c777f55a6fff9bc6407e813a93470965",
                          "typeString": "literal_string \"Address is zero\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1472:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1472:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1472:47:1"
                },
                {
                  "expression": {
                    "id": 153,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 138,
                    "src": "1536:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 136,
                  "id": 154,
                  "nodeType": "Return",
                  "src": "1529:12:1"
                }
              ]
            },
            "functionSelector": "6352211e",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1350:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 133,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1388:8:1"
            },
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1366:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1358:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1357:18:1"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1406:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1405:9:1"
            },
            "scope": 372,
            "src": "1341:207:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1617:89:1",
              "statements": [
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1635:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "1627:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1627:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 168,
                  "initialValue": {
                    "baseExpression": {
                      "id": 165,
                      "name": "_tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1643:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 167,
                    "indexExpression": {
                      "id": 166,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "1655:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1643:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1627:36:1"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 169,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "1680:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1697:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1689:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1689:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1689:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1680:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 162,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "1673:26:1"
                }
              ]
            },
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "1563:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1579:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1571:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1570:17:1"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1611:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1610:6:1"
            },
            "scope": 372,
            "src": "1554:152:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "1773:443:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 185,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "1838:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1852:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1844:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1844:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1844:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1838:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231206d696e74696e6720746f207a65726f2061646472657373",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1856:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_306fb3b625ce2d21881bb9bdf63c69f733fb9a755ff0486dddf7d599bb5a45d2",
                          "typeString": "literal_string \"ERC721 minting to zero address\""
                        },
                        "value": "ERC721 minting to zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_306fb3b625ce2d21881bb9bdf63c69f733fb9a755ff0486dddf7d599bb5a45d2",
                          "typeString": "literal_string \"ERC721 minting to zero address\""
                        }
                      ],
                      "id": 184,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1830:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1956:17:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 196,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 181,
                              "src": "1965:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 195,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "1957:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1957:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524337323120616c726561647920657869737473",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_268ec8ba17a0a8c666285b0836515fd66ada59c885b4ba54edeee5f82d51d42e",
                          "typeString": "literal_string \"ERC721 already exists\""
                        },
                        "value": "ERC721 already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_268ec8ba17a0a8c666285b0836515fd66ada59c885b4ba54edeee5f82d51d42e",
                          "typeString": "literal_string \"ERC721 already exists\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1948:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:51:1"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 202,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "2050:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 204,
                      "indexExpression": {
                        "id": 203,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "2062:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2050:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 205,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2073:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2050:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2050:25:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 208,
                          "name": "_ownedTokensCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "2127:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$746_storage_$",
                            "typeString": "mapping(address => struct Counters.Counter storage ref)"
                          }
                        },
                        "id": 210,
                        "indexExpression": {
                          "id": 209,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "2145:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2127:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$746_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 771,
                      "src": "2127:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$746_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$746_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2127:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2193:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2185:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2185:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2185:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 219,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "2197:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 220,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "2201:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 214,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "2176:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "EmitStatement",
                  "src": "2171:38:1"
                }
              ]
            },
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "1721:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1735:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "1727:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1747:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "1739:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1739:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1726:29:1"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:0:1"
            },
            "scope": 372,
            "src": "1712:504:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "2389:434:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 234,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "2420:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2435:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2427:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 235,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2427:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2420:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f72202d20455243373231205472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2451:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a4c8443e58adf249053a191ba0d6862a71336226ac8fa9f0862dbf02e0da38b",
                          "typeString": "literal_string \"Error - ERC721 Transfer to the zero address\""
                        },
                        "value": "Error - ERC721 Transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a4c8443e58adf249053a191ba0d6862a71336226ac8fa9f0862dbf02e0da38b",
                          "typeString": "literal_string \"Error - ERC721 Transfer to the zero address\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2399:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 245,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 230,
                              "src": "2545:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 244,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "2537:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2537:17:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 247,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "2558:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2537:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547279696e6720746f207472616e73666572206120746f6b656e20746865206164647265737320646f6573206e6f74206f776e21",
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2577:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c94204df04d428df5f0fc96f5c7a4e1de58e2e7bf19edf3fed6b45ad65f8dee2",
                          "typeString": "literal_string \"Trying to transfer a token the address does not own!\""
                        },
                        "value": "Trying to transfer a token the address does not own!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c94204df04d428df5f0fc96f5c7a4e1de58e2e7bf19edf3fed6b45ad65f8dee2",
                          "typeString": "literal_string \"Trying to transfer a token the address does not own!\""
                        }
                      ],
                      "id": 243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2516:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:125:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:125:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 252,
                          "name": "_ownedTokensCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "2652:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$746_storage_$",
                            "typeString": "mapping(address => struct Counters.Counter storage ref)"
                          }
                        },
                        "id": 254,
                        "indexExpression": {
                          "id": 253,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 226,
                          "src": "2670:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2652:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$746_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decrement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 788,
                      "src": "2652:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$746_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$746_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2652:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "2652:36:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 258,
                          "name": "_ownedTokensCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "2698:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$746_storage_$",
                            "typeString": "mapping(address => struct Counters.Counter storage ref)"
                          }
                        },
                        "id": 260,
                        "indexExpression": {
                          "id": 259,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "2716:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2698:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$746_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 771,
                      "src": "2698:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$746_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$746_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2698:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:34:1"
                },
                {
                  "expression": {
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 264,
                        "name": "_tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "2743:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 266,
                      "indexExpression": {
                        "id": 265,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2755:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2743:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 267,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "2767:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2743:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "2743:27:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 271,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "2795:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 272,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2802:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 273,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2807:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 270,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "2786:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "EmitStatement",
                  "src": "2781:35:1"
                }
              ]
            },
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferFrom",
            "nameLocation": "2290:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2321:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2313:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2313:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2344:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2336:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2336:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2365:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2357:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2303:76:1"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:0:1"
            },
            "scope": 372,
            "src": "2281:542:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              973
            ],
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "2943:110:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 289,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2979:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2979:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 291,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "2991:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 288,
                          "name": "isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 371,
                          "src": "2961:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2961:39:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2953:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 296,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3025:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 297,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3032:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 298,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "3037:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 295,
                      "name": "_transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "3011:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3011:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3011:35:1"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2838:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 285,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2934:8:1"
            },
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2868:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "2860:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2891:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "2883:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2883:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2912:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "2904:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2850:76:1"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2943:0:1"
            },
            "scope": 372,
            "src": "2829:224:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "3113:271:1",
              "statements": [
                {
                  "assignments": [
                    310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 310,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3131:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 342,
                      "src": "3123:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3123:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 314,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 312,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "3147:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 311,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "3139:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3139:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3123:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 316,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "3173:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 317,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "3180:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3173:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f72202d20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3187:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0434e28d14d5bac7586cdca087f44f43d3b149d34bae422b767d431836181afe",
                          "typeString": "literal_string \"Error - approval to current owner\""
                        },
                        "value": "Error - approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0434e28d14d5bac7586cdca087f44f43d3b149d34bae422b767d431836181afe",
                          "typeString": "literal_string \"Error - approval to current owner\""
                        }
                      ],
                      "id": 315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3165:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3241:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3241:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 325,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "3255:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3241:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e742063616c6c6572206d757374206265206f776e6572",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3262:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9cf4ee744d60ed5bad4915df1cc4e974d500dc35ce98f7ced6a844e976245cc",
                          "typeString": "literal_string \"Current caller must be owner\""
                        },
                        "value": "Current caller must be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9cf4ee744d60ed5bad4915df1cc4e974d500dc35ce98f7ced6a844e976245cc",
                          "typeString": "literal_string \"Current caller must be owner\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3233:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "3233:60:1"
                },
                {
                  "expression": {
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 330,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "3303:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 332,
                      "indexExpression": {
                        "id": 331,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "3319:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3303:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 333,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "3330:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3303:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "3303:30:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 337,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "3357:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 338,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "3364:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 339,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "3369:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 336,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 950,
                      "src": "3348:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3348:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "EmitStatement",
                  "src": "3343:34:1"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3068:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3084:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "3076:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3076:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3097:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "3089:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3089:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3075:30:1"
            },
            "returnParameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3113:0:1"
            },
            "scope": 372,
            "src": "3059:325:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "3502:143:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 354,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "3528:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 353,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 177,
                          "src": "3520:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3520:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e20646f6573206e6f74206578697374",
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3538:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3dfe0a9f34ad1d1915a5d3804d001dcc4ef1afcf3422b9b56e6886a98779408",
                          "typeString": "literal_string \"token does not exist\""
                        },
                        "value": "token does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3dfe0a9f34ad1d1915a5d3804d001dcc4ef1afcf3422b9b56e6886a98779408",
                          "typeString": "literal_string \"token does not exist\""
                        }
                      ],
                      "id": 352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3512:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3512:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:49:1"
                },
                {
                  "assignments": [
                    360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 360,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3579:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 370,
                      "src": "3571:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 359,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3571:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 364,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 362,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "3595:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 361,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "3587:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3587:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3571:32:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 365,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "3621:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 366,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 360,
                          "src": "3632:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3621:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 368,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3620:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 351,
                  "id": 369,
                  "nodeType": "Return",
                  "src": "3613:25:1"
                }
              ]
            },
            "id": 371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedOrOwner",
            "nameLocation": "3399:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3434:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "3426:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3459:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "3451:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3451:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3416:56:1"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "3496:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3496:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3495:6:1"
            },
            "scope": 372,
            "src": "3390:255:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 373,
        "src": "550:3097:1",
        "usedErrors": []
      }
    ],
    "src": "33:3615:1"
  },
  "bytecode": "608060405234801561001057600080fd5b5061003a7f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2610068565b6100637f92d8a794d910422f7549620ed7a8f75c2c42d18032da05c61ed89586344e965e610068565b6100eb565b6001600160e01b031980821614156100c65760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420696e74657266616365207265717565737400000000000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b61072d806100fa6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c578063095ea7b31461009e57806323b872dd146100b35780636352211e146100c657806370a08231146100f1575b600080fd5b61008961006a3660046105cb565b6001600160e01b03191660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100b16100ac366004610618565b610112565b005b6100b16100c1366004610642565b610244565b6100d96100d436600461067e565b610267565b6040516001600160a01b039091168152602001610095565b6101046100ff366004610697565b6102c4565b604051908152602001610095565b600061011d82610267565b9050806001600160a01b0316836001600160a01b031614156101905760405162461bcd60e51b815260206004820152602160248201527f4572726f72202d20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216146101e85760405162461bcd60e51b815260206004820152601c60248201527f43757272656e742063616c6c6572206d757374206265206f776e6572000000006044820152606401610187565b60008281526003602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61024e338261032c565b61025757600080fd5b6102628383836103a9565b505050565b6000818152600160205260408120546001600160a01b0316806102be5760405162461bcd60e51b815260206004820152600f60248201526e41646472657373206973207a65726f60881b6044820152606401610187565b92915050565b60006001600160a01b03821661030e5760405162461bcd60e51b815260206004820152600f60248201526e41646472657373206973207a65726f60881b6044820152606401610187565b6001600160a01b0382166000908152600260205260409020546102be565b6000818152600160205260408120546001600160a01b03166103875760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610187565b600061039283610267565b6001600160a01b0385811691161491505092915050565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152602b60248201527f4572726f72202d20455243373231205472616e7366657220746f20746865207a60448201526a65726f206164647265737360a81b6064820152608401610187565b826001600160a01b031661042682610267565b6001600160a01b0316146104995760405162461bcd60e51b815260206004820152603460248201527f547279696e6720746f207472616e73666572206120746f6b656e20746865206160448201527364647265737320646f6573206e6f74206f776e2160601b6064820152608401610187565b6001600160a01b03831660009081526002602052604090206104ba90610537565b6001600160a01b03821660009081526002602052604090206104db90610548565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8054610544906001610565565b9055565b600181600001600082825461055d91906106c8565b909155505050565b6000828211156105b75760405162461bcd60e51b815260206004820152601e60248201527f536166656d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610187565b60006105c383856106e0565b949350505050565b6000602082840312156105dd57600080fd5b81356001600160e01b0319811681146105f557600080fd5b9392505050565b80356001600160a01b038116811461061357600080fd5b919050565b6000806040838503121561062b57600080fd5b610634836105fc565b946020939093013593505050565b60008060006060848603121561065757600080fd5b610660846105fc565b925061066e602085016105fc565b9150604084013590509250925092565b60006020828403121561069057600080fd5b5035919050565b6000602082840312156106a957600080fd5b6105f5826105fc565b634e487b7160e01b600052601160045260246000fd5b600082198211156106db576106db6106b2565b500190565b6000828210156106f2576106f26106b2565b50039056fea26469706673582212202dc09321d59732fbe49560de184e56bb534bd8b44c8af2010195d47f549ce65264736f6c634300080a0033",
  "bytecodeSha1": "07366613addde2335a50d150195035848db9ac8b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "ERC721._transferFrom": {
          "28": [
            2420,
            2437,
            true
          ],
          "29": [
            2537,
            2563,
            true
          ]
        },
        "ERC721.approve": {
          "23": [
            3173,
            3185,
            true
          ],
          "24": [
            3241,
            3260,
            true
          ]
        },
        "ERC721.balanceOf": {
          "27": [
            1236,
            1256,
            true
          ]
        },
        "ERC721.ownerOf": {
          "26": [
            1480,
            1499,
            true
          ]
        },
        "ERC721.transferFrom": {
          "25": [
            2961,
            3000,
            true
          ]
        }
      },
      "10": {},
      "7": {},
      "8": {
        "SafeMath.sub": {
          "30": [
            372,
            378,
            true
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "ERC165.supportsInterface": {
          "0": [
            399,
            439
          ]
        }
      },
      "1": {
        "ERC721._transferFrom": {
          "14": [
            2399,
            2506
          ],
          "15": [
            2516,
            2641
          ],
          "16": [
            2652,
            2688
          ],
          "17": [
            2698,
            2732
          ],
          "18": [
            2743,
            2770
          ],
          "19": [
            2781,
            2816
          ]
        },
        "ERC721.approve": {
          "1": [
            3165,
            3223
          ],
          "2": [
            3233,
            3293
          ],
          "3": [
            3303,
            3333
          ],
          "4": [
            3343,
            3377
          ]
        },
        "ERC721.balanceOf": {
          "9": [
            1228,
            1276
          ],
          "10": [
            1286,
            1328
          ]
        },
        "ERC721.isApprovedOrOwner": {
          "12": [
            3512,
            3561
          ],
          "13": [
            3613,
            3638
          ]
        },
        "ERC721.ownerOf": {
          "7": [
            1472,
            1519
          ],
          "8": [
            1529,
            1541
          ]
        },
        "ERC721.transferFrom": {
          "5": [
            2953,
            3001
          ],
          "6": [
            3011,
            3046
          ]
        }
      },
      "10": {},
      "7": {
        "Counters.current": {
          "11": [
            317,
            338
          ]
        },
        "Counters.decrement": {
          "20": [
            509,
            547
          ]
        },
        "Counters.increment": {
          "21": [
            414,
            433
          ]
        }
      },
      "8": {
        "SafeMath.sub": {
          "22": [
            364,
            413
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "Counters",
    "ERC165",
    "IERC165",
    "IERC721",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c578063095ea7b31461009e57806323b872dd146100b35780636352211e146100c657806370a08231146100f1575b600080fd5b61008961006a3660046105cb565b6001600160e01b03191660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100b16100ac366004610618565b610112565b005b6100b16100c1366004610642565b610244565b6100d96100d436600461067e565b610267565b6040516001600160a01b039091168152602001610095565b6101046100ff366004610697565b6102c4565b604051908152602001610095565b600061011d82610267565b9050806001600160a01b0316836001600160a01b031614156101905760405162461bcd60e51b815260206004820152602160248201527f4572726f72202d20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216146101e85760405162461bcd60e51b815260206004820152601c60248201527f43757272656e742063616c6c6572206d757374206265206f776e6572000000006044820152606401610187565b60008281526003602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61024e338261032c565b61025757600080fd5b6102628383836103a9565b505050565b6000818152600160205260408120546001600160a01b0316806102be5760405162461bcd60e51b815260206004820152600f60248201526e41646472657373206973207a65726f60881b6044820152606401610187565b92915050565b60006001600160a01b03821661030e5760405162461bcd60e51b815260206004820152600f60248201526e41646472657373206973207a65726f60881b6044820152606401610187565b6001600160a01b0382166000908152600260205260409020546102be565b6000818152600160205260408120546001600160a01b03166103875760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610187565b600061039283610267565b6001600160a01b0385811691161491505092915050565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152602b60248201527f4572726f72202d20455243373231205472616e7366657220746f20746865207a60448201526a65726f206164647265737360a81b6064820152608401610187565b826001600160a01b031661042682610267565b6001600160a01b0316146104995760405162461bcd60e51b815260206004820152603460248201527f547279696e6720746f207472616e73666572206120746f6b656e20746865206160448201527364647265737320646f6573206e6f74206f776e2160601b6064820152608401610187565b6001600160a01b03831660009081526002602052604090206104ba90610537565b6001600160a01b03821660009081526002602052604090206104db90610548565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8054610544906001610565565b9055565b600181600001600082825461055d91906106c8565b909155505050565b6000828211156105b75760405162461bcd60e51b815260206004820152601e60248201527f536166656d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610187565b60006105c383856106e0565b949350505050565b6000602082840312156105dd57600080fd5b81356001600160e01b0319811681146105f557600080fd5b9392505050565b80356001600160a01b038116811461061357600080fd5b919050565b6000806040838503121561062b57600080fd5b610634836105fc565b946020939093013593505050565b60008060006060848603121561065757600080fd5b610660846105fc565b925061066e602085016105fc565b9150604084013590509250925092565b60006020828403121561069057600080fd5b5035919050565b6000602082840312156106a957600080fd5b6105f5826105fc565b634e487b7160e01b600052601160045260246000fd5b600082198211156106db576106db6106b2565b500190565b6000828210156106f2576106f26106b2565b50039056fea26469706673582212202dc09321d59732fbe49560de184e56bb534bd8b44c8af2010195d47f549ce65264736f6c634300080a0033",
  "deployedSourceMap": "550:3097:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;290:156:0;;;;;;:::i;:::-;-1:-1:-1;;;;;;406:33:0;383:4;406:33;;;;;;;;;;;;;;290:156;;;;470:14:13;;463:22;445:41;;433:2;418:18;290:156:0;;;;;;;;3059:325:1;;;;;;:::i;:::-;;:::i;:::-;;2829:224;;;;;;:::i;:::-;;:::i;1341:207::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1616:32:13;;;1598:51;;1586:2;1571:18;1341:207:1;1452:203:13;1144:191:1;;;;;;:::i;:::-;;:::i;:::-;;;1997:25:13;;;1985:2;1970:18;1144:191:1;1851:177:13;3059:325:1;3123:13;3139:16;3147:7;3139;:16::i;:::-;3123:32;;3180:5;-1:-1:-1;;;;;3173:12:1;:3;-1:-1:-1;;;;;3173:12:1;;;3165:58;;;;-1:-1:-1;;;3165:58:1;;2235:2:13;3165:58:1;;;2217:21:13;2274:2;2254:18;;;2247:30;2313:34;2293:18;;;2286:62;-1:-1:-1;;;2364:18:13;;;2357:31;2405:19;;3165:58:1;;;;;;;;;3241:10;-1:-1:-1;;;;;3241:19:1;;;3233:60;;;;-1:-1:-1;;;3233:60:1;;2637:2:13;3233:60:1;;;2619:21:13;2676:2;2656:18;;;2649:30;2715;2695:18;;;2688:58;2763:18;;3233:60:1;2435:352:13;3233:60:1;3303:24;;;;:15;:24;;;;;;:30;;-1:-1:-1;;;;;;3303:30:1;-1:-1:-1;;;;;3303:30:1;;;;;;;;;3348:29;;3303:24;;3348:29;;;;;;;3113:271;3059:325;;:::o;2829:224::-;2961:39;2979:10;2991:8;2961:17;:39::i;:::-;2953:48;;;;;;3011:35;3025:5;3032:3;3037:8;3011:13;:35::i;:::-;2829:224;;;:::o;1341:207::-;1406:7;1441:21;;;:11;:21;;;;;;-1:-1:-1;;;;;1441:21:1;1480:19;1472:47;;;;-1:-1:-1;;;1472:47:1;;2994:2:13;1472:47:1;;;2976:21:13;3033:2;3013:18;;;3006:30;-1:-1:-1;;;3052:18:13;;;3045:45;3107:18;;1472:47:1;2792:339:13;1472:47:1;1536:5;1341:207;-1:-1:-1;;1341:207:1:o;1144:191::-;1209:7;-1:-1:-1;;;;;1236:20:1;;1228:48;;;;-1:-1:-1;;;1228:48:1;;2994:2:13;1228:48:1;;;2976:21:13;3033:2;3013:18;;;3006:30;-1:-1:-1;;;3052:18:13;;;3045:45;3107:18;;1228:48:1;2792:339:13;1228:48:1;-1:-1:-1;;;;;1293:25:1;;;;;;:17;:25;;;;;324:14:7;1293:35:1;233:112:7;3390:255:1;3496:4;1643:20;;;:11;:20;;;;;;-1:-1:-1;;;;;1643:20:1;3512:49;;;;-1:-1:-1;;;3512:49:1;;3338:2:13;3512:49:1;;;3320:21:13;3377:2;3357:18;;;3350:30;-1:-1:-1;;;3396:18:13;;;3389:50;3456:18;;3512:49:1;3136:344:13;3512:49:1;3571:13;3587:16;3595:7;3587;:16::i;:::-;-1:-1:-1;;;;;3621:16:1;;;;;;;-1:-1:-1;;3390:255:1;;;;:::o;2281:542::-;-1:-1:-1;;;;;2420:17:1;;2399:107;;;;-1:-1:-1;;;2399:107:1;;3687:2:13;2399:107:1;;;3669:21:13;3726:2;3706:18;;;3699:30;3765:34;3745:18;;;3738:62;-1:-1:-1;;;3816:18:13;;;3809:41;3867:19;;2399:107:1;3485:407:13;2399:107:1;2558:5;-1:-1:-1;;;;;2537:26:1;:17;2545:8;2537:7;:17::i;:::-;-1:-1:-1;;;;;2537:26:1;;2516:125;;;;-1:-1:-1;;;2516:125:1;;4099:2:13;2516:125:1;;;4081:21:13;4138:2;4118:18;;;4111:30;4177:34;4157:18;;;4150:62;-1:-1:-1;;;4228:18:13;;;4221:50;4288:19;;2516:125:1;3897:416:13;2516:125:1;-1:-1:-1;;;;;2652:24:1;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;-1:-1:-1;;;;;2698:22:1;;;;;;:17;:22;;;;;:34;;:32;:34::i;:::-;2743:21;;;;:11;:21;;;;;;:27;;-1:-1:-1;;;;;;2743:27:1;-1:-1:-1;;;;;2743:27:1;;;;;;;;;2786:30;;2743:21;;2786:30;;;;;;;2281:542;;;:::o;446:108:7:-;526:14;;:21;;545:1;526:18;:21::i;:::-;509:38;;446:108::o;351:89::-;432:1;414:7;:14;;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;;351:89:7:o;287:178:8:-;345:7;377:1;372;:6;;364:49;;;;-1:-1:-1;;;364:49:8;;4785:2:13;364:49:8;;;4767:21:13;4824:2;4804:18;;;4797:30;4863:32;4843:18;;;4836:60;4913:18;;364:49:8;4583:354:13;364:49:8;423:9;435:5;439:1;435;:5;:::i;:::-;423:17;287:178;-1:-1:-1;;;;287:178:8:o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:13;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:254::-;743:6;751;804:2;792:9;783:7;779:23;775:32;772:52;;;820:1;817;810:12;772:52;843:29;862:9;843:29;:::i;:::-;833:39;919:2;904:18;;;;891:32;;-1:-1:-1;;;675:254:13:o;934:328::-;1011:6;1019;1027;1080:2;1068:9;1059:7;1055:23;1051:32;1048:52;;;1096:1;1093;1086:12;1048:52;1119:29;1138:9;1119:29;:::i;:::-;1109:39;;1167:38;1201:2;1190:9;1186:18;1167:38;:::i;:::-;1157:48;;1252:2;1241:9;1237:18;1224:32;1214:42;;934:328;;;;;:::o;1267:180::-;1326:6;1379:2;1367:9;1358:7;1354:23;1350:32;1347:52;;;1395:1;1392;1385:12;1347:52;-1:-1:-1;1418:23:13;;1267:180;-1:-1:-1;1267:180:13:o;1660:186::-;1719:6;1772:2;1760:9;1751:7;1747:23;1743:32;1740:52;;;1788:1;1785;1778:12;1740:52;1811:29;1830:9;1811:29;:::i;4318:127::-;4379:10;4374:3;4370:20;4367:1;4360:31;4410:4;4407:1;4400:15;4434:4;4431:1;4424:15;4450:128;4490:3;4521:1;4517:6;4514:1;4511:13;4508:39;;;4527:18;;:::i;:::-;-1:-1:-1;4563:9:13;;4450:128::o;4942:125::-;4982:4;5010:1;5007;5004:8;5001:34;;;5015:18;;:::i;:::-;-1:-1:-1;5052:9:13;;4942:125::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    550,
    3647
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x89 PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x618 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0xC1 CALLDATASIZE PUSH1 0x4 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x697 JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D DUP3 PUSH2 0x267 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F72202D20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x1E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43757272656E742063616C6C6572206D757374206265206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x187 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x24E CALLER DUP3 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x262 DUP4 DUP4 DUP4 PUSH2 0x3A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x41646472657373206973207A65726F PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x41646472657373206973207A65726F PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x187 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x187 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x392 DUP4 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F72202D20455243373231205472616E7366657220746F20746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x187 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x426 DUP3 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547279696E6720746F207472616E73666572206120746F6B656E207468652061 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x64647265737320646F6573206E6F74206F776E21 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x187 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4BA SWAP1 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4DB SWAP1 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP1 SLOAD PUSH2 0x544 SWAP1 PUSH1 0x1 PUSH2 0x565 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166656D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x187 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C3 DUP4 DUP6 PUSH2 0x6E0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x634 DUP4 PUSH2 0x5FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x660 DUP5 PUSH2 0x5FC JUMP JUMPDEST SWAP3 POP PUSH2 0x66E PUSH1 0x20 DUP6 ADD PUSH2 0x5FC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F5 DUP3 PUSH2 0x5FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6DB JUMPI PUSH2 0x6DB PUSH2 0x6B2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x6F2 PUSH2 0x6B2 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xC0 SWAP4 0x21 0xD5 SWAP8 ORIGIN 0xFB 0xE4 SWAP6 PUSH1 0xDE XOR 0x4E JUMP 0xBB MSTORE8 0x4B 0xD8 0xB4 0x4C DUP11 CALLCODE ADD ADD SWAP6 0xD4 PUSH32 0x549CE65264736F6C634300080A00330000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        550,
        3647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "38": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "49": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E"
    },
    "53": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "60": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB3"
    },
    "64": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "71": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC6"
    },
    "75": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "82": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1"
    },
    "86": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        550,
        3647
      ],
      "op": "REVERT",
      "path": "1"
    },
    "92": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "93": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89"
    },
    "96": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A"
    },
    "99": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "100": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "102": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CB"
    },
    "105": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        290,
        446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "106": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "111": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "113": {
      "op": "SHL"
    },
    "114": {
      "op": "SUB"
    },
    "115": {
      "op": "NOT"
    },
    "116": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "AND",
      "path": "0",
      "statement": 0
    },
    "117": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        383,
        387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "119": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "120": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "121": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "122": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "124": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "DUP2",
      "path": "0"
    },
    "125": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "126": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "127": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "129": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "130": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "131": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "132": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "134": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "AND",
      "path": "0"
    },
    "135": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        406,
        439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "136": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "JUMP",
      "path": "0"
    },
    "137": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "138": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "140": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "141": {
      "op": "SWAP1"
    },
    "142": {
      "op": "ISZERO"
    },
    "143": {
      "op": "ISZERO"
    },
    "144": {
      "op": "DUP2"
    },
    "145": {
      "op": "MSTORE"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "148": {
      "op": "ADD"
    },
    "149": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "150": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "152": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "153": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "DUP1",
      "path": "0"
    },
    "154": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "155": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "SUB",
      "path": "0"
    },
    "156": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "157": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        290,
        446
      ],
      "op": "RETURN",
      "path": "0"
    },
    "158": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "159": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB1"
    },
    "162": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAC"
    },
    "165": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "166": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "168": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x618"
    },
    "171": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3059,
        3384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "172": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "173": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x112"
    },
    "176": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3059,
        3384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "177": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "178": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "STOP",
      "path": "1"
    },
    "179": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "180": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB1"
    },
    "183": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC1"
    },
    "186": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "187": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "189": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x642"
    },
    "192": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        2829,
        3053
      ],
      "op": "JUMP",
      "path": "1"
    },
    "193": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "194": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x244"
    },
    "197": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        2829,
        3053
      ],
      "op": "JUMP",
      "path": "1"
    },
    "198": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "199": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD9"
    },
    "202": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4"
    },
    "205": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "206": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "208": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x67E"
    },
    "211": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1341,
        1548
      ],
      "op": "JUMP",
      "path": "1"
    },
    "212": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x267"
    },
    "216": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        1341,
        1548
      ],
      "op": "JUMP",
      "path": "1"
    },
    "217": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "218": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "220": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "227": {
      "op": "SHL"
    },
    "228": {
      "op": "SUB"
    },
    "229": {
      "op": "SWAP1"
    },
    "230": {
      "op": "SWAP2"
    },
    "231": {
      "op": "AND"
    },
    "232": {
      "op": "DUP2"
    },
    "233": {
      "op": "MSTORE"
    },
    "234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "236": {
      "op": "ADD"
    },
    "237": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95"
    },
    "240": {
      "op": "JUMP"
    },
    "241": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "242": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "245": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF"
    },
    "248": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "249": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "251": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x697"
    },
    "254": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1144,
        1335
      ],
      "op": "JUMP",
      "path": "1"
    },
    "255": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "256": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C4"
    },
    "259": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1144,
        1335
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "264": {
      "op": "SWAP1"
    },
    "265": {
      "op": "DUP2"
    },
    "266": {
      "op": "MSTORE"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "269": {
      "op": "ADD"
    },
    "270": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95"
    },
    "273": {
      "op": "JUMP"
    },
    "274": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "275": {
      "fn": "ERC721.approve",
      "offset": [
        3123,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "277": {
      "fn": "ERC721.approve",
      "offset": [
        3139,
        3155
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11D"
    },
    "280": {
      "fn": "ERC721.approve",
      "offset": [
        3147,
        3154
      ],
      "op": "DUP3",
      "path": "1"
    },
    "281": {
      "fn": "ERC721.approve",
      "offset": [
        3139,
        3146
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x267"
    },
    "284": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3139,
        3155
      ],
      "op": "JUMP",
      "path": "1"
    },
    "285": {
      "fn": "ERC721.approve",
      "offset": [
        3139,
        3155
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "286": {
      "fn": "ERC721.approve",
      "offset": [
        3123,
        3155
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "287": {
      "fn": "ERC721.approve",
      "offset": [
        3123,
        3155
      ],
      "op": "POP",
      "path": "1"
    },
    "288": {
      "fn": "ERC721.approve",
      "offset": [
        3180,
        3185
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 1
    },
    "289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "295": {
      "op": "SHL"
    },
    "296": {
      "op": "SUB"
    },
    "297": {
      "fn": "ERC721.approve",
      "offset": [
        3173,
        3185
      ],
      "op": "AND",
      "path": "1"
    },
    "298": {
      "fn": "ERC721.approve",
      "offset": [
        3173,
        3176
      ],
      "op": "DUP4",
      "path": "1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "305": {
      "op": "SHL"
    },
    "306": {
      "op": "SUB"
    },
    "307": {
      "fn": "ERC721.approve",
      "offset": [
        3173,
        3185
      ],
      "op": "AND",
      "path": "1"
    },
    "308": {
      "fn": "ERC721.approve",
      "offset": [
        3173,
        3185
      ],
      "op": "EQ",
      "path": "1"
    },
    "309": {
      "branch": 23,
      "fn": "ERC721.approve",
      "offset": [
        3173,
        3185
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "310": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x190"
    },
    "313": {
      "branch": 23,
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "314": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "323": {
      "op": "SHL"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "DUP2",
      "path": "1"
    },
    "325": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "DUP3",
      "path": "1"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "ADD",
      "path": "1"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "337": {
      "op": "DUP3"
    },
    "338": {
      "op": "ADD"
    },
    "339": {
      "op": "MSTORE"
    },
    "340": {
      "op": "PUSH32",
      "value": "0x4572726F72202D20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "375": {
      "op": "DUP3"
    },
    "376": {
      "op": "ADD"
    },
    "377": {
      "op": "MSTORE"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "385": {
      "op": "DUP3"
    },
    "386": {
      "op": "ADD"
    },
    "387": {
      "op": "MSTORE"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "390": {
      "op": "ADD"
    },
    "391": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "392": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "394": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "395": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "DUP1",
      "path": "1"
    },
    "396": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "397": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "SUB",
      "path": "1"
    },
    "398": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "399": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "400": {
      "fn": "ERC721.approve",
      "offset": [
        3165,
        3223
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "401": {
      "fn": "ERC721.approve",
      "offset": [
        3241,
        3251
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 2
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "408": {
      "op": "SHL"
    },
    "409": {
      "op": "SUB"
    },
    "410": {
      "fn": "ERC721.approve",
      "offset": [
        3241,
        3260
      ],
      "op": "DUP3",
      "path": "1"
    },
    "411": {
      "fn": "ERC721.approve",
      "offset": [
        3241,
        3260
      ],
      "op": "AND",
      "path": "1"
    },
    "412": {
      "branch": 24,
      "fn": "ERC721.approve",
      "offset": [
        3241,
        3260
      ],
      "op": "EQ",
      "path": "1"
    },
    "413": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E8"
    },
    "416": {
      "branch": 24,
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "417": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "419": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "420": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "424": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "426": {
      "op": "SHL"
    },
    "427": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "428": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "431": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "433": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "DUP3",
      "path": "1"
    },
    "434": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "ADD",
      "path": "1"
    },
    "435": {
      "op": "MSTORE"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "440": {
      "op": "DUP3"
    },
    "441": {
      "op": "ADD"
    },
    "442": {
      "op": "MSTORE"
    },
    "443": {
      "op": "PUSH32",
      "value": "0x43757272656E742063616C6C6572206D757374206265206F776E657200000000"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "478": {
      "op": "DUP3"
    },
    "479": {
      "op": "ADD"
    },
    "480": {
      "op": "MSTORE"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "483": {
      "op": "ADD"
    },
    "484": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "487": {
      "op": "JUMP"
    },
    "488": {
      "fn": "ERC721.approve",
      "offset": [
        3233,
        3293
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "489": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x0"
    },
    "491": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "DUP3",
      "path": "1"
    },
    "492": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "DUP2",
      "path": "1"
    },
    "493": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "494": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "496": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "498": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "499": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "501": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "DUP1",
      "path": "1"
    },
    "502": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "DUP3",
      "path": "1"
    },
    "503": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "504": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "DUP1",
      "path": "1"
    },
    "505": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "512": {
      "op": "SHL"
    },
    "513": {
      "op": "SUB"
    },
    "514": {
      "op": "NOT"
    },
    "515": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "AND",
      "path": "1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "522": {
      "op": "SHL"
    },
    "523": {
      "op": "SUB"
    },
    "524": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "DUP8",
      "path": "1"
    },
    "525": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "526": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "AND",
      "path": "1"
    },
    "527": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "528": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "DUP3",
      "path": "1"
    },
    "529": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "OR",
      "path": "1"
    },
    "530": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "531": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "532": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3333
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "533": {
      "fn": "ERC721.approve",
      "offset": [
        3348,
        3377
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 4
    },
    "534": {
      "fn": "ERC721.approve",
      "offset": [
        3348,
        3377
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "535": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "DUP6",
      "path": "1"
    },
    "536": {
      "fn": "ERC721.approve",
      "offset": [
        3303,
        3327
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "537": {
      "fn": "ERC721.approve",
      "offset": [
        3348,
        3377
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "538": {
      "fn": "ERC721.approve",
      "offset": [
        3348,
        3377
      ],
      "op": "DUP6",
      "path": "1"
    },
    "539": {
      "fn": "ERC721.approve",
      "offset": [
        3348,
        3377
      ],
      "op": "AND",
      "path": "1"
    },
    "540": {
      "fn": "ERC721.approve",
      "offset": [
        3348,
        3377
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "541": {
      "fn": "ERC721.approve",
      "offset": [
        3348,
        3377
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "574": {
      "fn": "ERC721.approve",
      "offset": [
        3348,
        3377
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "575": {
      "fn": "ERC721.approve",
      "offset": [
        3348,
        3377
      ],
      "op": "LOG4",
      "path": "1"
    },
    "576": {
      "fn": "ERC721.approve",
      "offset": [
        3113,
        3384
      ],
      "op": "POP",
      "path": "1"
    },
    "577": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "POP",
      "path": "1"
    },
    "578": {
      "fn": "ERC721.approve",
      "offset": [
        3059,
        3384
      ],
      "op": "POP",
      "path": "1"
    },
    "579": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3059,
        3384
      ],
      "op": "JUMP",
      "path": "1"
    },
    "580": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "581": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2961,
        3000
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 5,
      "value": "0x24E"
    },
    "584": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2979,
        2989
      ],
      "op": "CALLER",
      "path": "1"
    },
    "585": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2991,
        2999
      ],
      "op": "DUP3",
      "path": "1"
    },
    "586": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2961,
        2978
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32C"
    },
    "589": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        2961,
        3000
      ],
      "op": "JUMP",
      "path": "1"
    },
    "590": {
      "branch": 25,
      "fn": "ERC721.transferFrom",
      "offset": [
        2961,
        3000
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "591": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2953,
        3001
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x257"
    },
    "594": {
      "branch": 25,
      "fn": "ERC721.transferFrom",
      "offset": [
        2953,
        3001
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "595": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2953,
        3001
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2953,
        3001
      ],
      "op": "DUP1",
      "path": "1"
    },
    "598": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2953,
        3001
      ],
      "op": "REVERT",
      "path": "1"
    },
    "599": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2953,
        3001
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "600": {
      "fn": "ERC721.transferFrom",
      "offset": [
        3011,
        3046
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 6,
      "value": "0x262"
    },
    "603": {
      "fn": "ERC721.transferFrom",
      "offset": [
        3025,
        3030
      ],
      "op": "DUP4",
      "path": "1"
    },
    "604": {
      "fn": "ERC721.transferFrom",
      "offset": [
        3032,
        3035
      ],
      "op": "DUP4",
      "path": "1"
    },
    "605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        3037,
        3045
      ],
      "op": "DUP4",
      "path": "1"
    },
    "606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        3011,
        3024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A9"
    },
    "609": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        3011,
        3046
      ],
      "op": "JUMP",
      "path": "1"
    },
    "610": {
      "fn": "ERC721.transferFrom",
      "offset": [
        3011,
        3046
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "611": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "POP",
      "path": "1"
    },
    "612": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "POP",
      "path": "1"
    },
    "613": {
      "fn": "ERC721.transferFrom",
      "offset": [
        2829,
        3053
      ],
      "op": "POP",
      "path": "1"
    },
    "614": {
      "fn": "ERC721.transferFrom",
      "jump": "o",
      "offset": [
        2829,
        3053
      ],
      "op": "JUMP",
      "path": "1"
    },
    "615": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "616": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1406,
        1413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "618": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "DUP2",
      "path": "1"
    },
    "619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "DUP2",
      "path": "1"
    },
    "620": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "621": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "623": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "625": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "626": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "628": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "DUP2",
      "path": "1"
    },
    "629": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "630": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "op": "SUB"
    },
    "639": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1441,
        1462
      ],
      "op": "AND",
      "path": "1"
    },
    "640": {
      "branch": 26,
      "fn": "ERC721.ownerOf",
      "offset": [
        1480,
        1499
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 7
    },
    "641": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BE"
    },
    "644": {
      "branch": 26,
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "645": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "647": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "648": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "656": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "659": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "661": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "DUP3",
      "path": "1"
    },
    "662": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "ADD",
      "path": "1"
    },
    "663": {
      "op": "MSTORE"
    },
    "664": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "668": {
      "op": "DUP3"
    },
    "669": {
      "op": "ADD"
    },
    "670": {
      "op": "MSTORE"
    },
    "671": {
      "op": "PUSH15",
      "value": "0x41646472657373206973207A65726F"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "689": {
      "op": "SHL"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "692": {
      "op": "DUP3"
    },
    "693": {
      "op": "ADD"
    },
    "694": {
      "op": "MSTORE"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "697": {
      "op": "ADD"
    },
    "698": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "701": {
      "op": "JUMP"
    },
    "702": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1472,
        1519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "703": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1536,
        1541
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 8
    },
    "704": {
      "fn": "ERC721.ownerOf",
      "offset": [
        1341,
        1548
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "fn": "ERC721.ownerOf",
      "jump": "o",
      "offset": [
        1341,
        1548
      ],
      "op": "JUMP",
      "path": "1"
    },
    "708": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1144,
        1335
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "709": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1209,
        1216
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "SUB"
    },
    "719": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1236,
        1256
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 9
    },
    "720": {
      "branch": 27,
      "fn": "ERC721.balanceOf",
      "offset": [
        1236,
        1256
      ],
      "op": "AND",
      "path": "1"
    },
    "721": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30E"
    },
    "724": {
      "branch": 27,
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "725": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "727": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "728": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "732": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "734": {
      "op": "SHL"
    },
    "735": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "DUP2",
      "path": "1"
    },
    "736": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "739": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "741": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "DUP3",
      "path": "1"
    },
    "742": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "ADD",
      "path": "1"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "748": {
      "op": "DUP3"
    },
    "749": {
      "op": "ADD"
    },
    "750": {
      "op": "MSTORE"
    },
    "751": {
      "op": "PUSH15",
      "value": "0x41646472657373206973207A65726F"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "772": {
      "op": "DUP3"
    },
    "773": {
      "op": "ADD"
    },
    "774": {
      "op": "MSTORE"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "777": {
      "op": "ADD"
    },
    "778": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "781": {
      "op": "JUMP"
    },
    "782": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1228,
        1276
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "789": {
      "op": "SHL"
    },
    "790": {
      "op": "SUB"
    },
    "791": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 10
    },
    "792": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "AND",
      "path": "1"
    },
    "793": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "795": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "796": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "DUP2",
      "path": "1"
    },
    "797": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "798": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1310
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "800": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "802": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "803": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "805": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "806": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1318
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "807": {
      "fn": "Counters.current",
      "offset": [
        324,
        338
      ],
      "op": "SLOAD",
      "path": "7",
      "statement": 11
    },
    "808": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1293,
        1328
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BE"
    },
    "811": {
      "fn": "Counters.current",
      "offset": [
        233,
        345
      ],
      "op": "JUMP",
      "path": "7"
    },
    "812": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3390,
        3645
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "813": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3496,
        3500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "815": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "816": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "817": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "818": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1654
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "820": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "822": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "823": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "825": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "826": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "827": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "op": "SUB"
    },
    "836": {
      "fn": "ERC721._exists",
      "offset": [
        1643,
        1663
      ],
      "op": "AND",
      "path": "1"
    },
    "837": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x387"
    },
    "840": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "841": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "843": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "852": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "855": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "857": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "DUP3",
      "path": "1"
    },
    "858": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "ADD",
      "path": "1"
    },
    "859": {
      "op": "MSTORE"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "864": {
      "op": "DUP3"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH20",
      "value": "0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "890": {
      "op": "SHL"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "893": {
      "op": "DUP3"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "898": {
      "op": "ADD"
    },
    "899": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "902": {
      "op": "JUMP"
    },
    "903": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3512,
        3561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "904": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3571,
        3584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "906": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3587,
        3603
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x392"
    },
    "909": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3595,
        3602
      ],
      "op": "DUP4",
      "path": "1"
    },
    "910": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3587,
        3594
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x267"
    },
    "913": {
      "fn": "ERC721.isApprovedOrOwner",
      "jump": "i",
      "offset": [
        3587,
        3603
      ],
      "op": "JUMP",
      "path": "1"
    },
    "914": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3587,
        3603
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "921": {
      "op": "SHL"
    },
    "922": {
      "op": "SUB"
    },
    "923": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 13
    },
    "924": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "1"
    },
    "925": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "1"
    },
    "926": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "927": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "1"
    },
    "928": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3621,
        3637
      ],
      "op": "EQ",
      "path": "1"
    },
    "929": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "op": "POP"
    },
    "932": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3390,
        3645
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "933": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3390,
        3645
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "934": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3390,
        3645
      ],
      "op": "POP",
      "path": "1"
    },
    "935": {
      "fn": "ERC721.isApprovedOrOwner",
      "offset": [
        3390,
        3645
      ],
      "op": "POP",
      "path": "1"
    },
    "936": {
      "fn": "ERC721.isApprovedOrOwner",
      "jump": "o",
      "offset": [
        3390,
        3645
      ],
      "op": "JUMP",
      "path": "1"
    },
    "937": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2281,
        2823
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "op": "SUB"
    },
    "946": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2420,
        2437
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 14
    },
    "947": {
      "branch": 28,
      "fn": "ERC721._transferFrom",
      "offset": [
        2420,
        2437
      ],
      "op": "AND",
      "path": "1"
    },
    "948": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x413"
    },
    "951": {
      "branch": 28,
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "952": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "954": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "DUP2",
      "path": "1"
    },
    "963": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "966": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "968": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "DUP3",
      "path": "1"
    },
    "969": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "ADD",
      "path": "1"
    },
    "970": {
      "op": "MSTORE"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "975": {
      "op": "DUP3"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "op": "MSTORE"
    },
    "978": {
      "op": "PUSH32",
      "value": "0x4572726F72202D20455243373231205472616E7366657220746F20746865207A"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1013": {
      "op": "DUP3"
    },
    "1014": {
      "op": "ADD"
    },
    "1015": {
      "op": "MSTORE"
    },
    "1016": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1030": {
      "op": "SHL"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1033": {
      "op": "DUP3"
    },
    "1034": {
      "op": "ADD"
    },
    "1035": {
      "op": "MSTORE"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1038": {
      "op": "ADD"
    },
    "1039": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "1042": {
      "op": "JUMP"
    },
    "1043": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2399,
        2506
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1044": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2558,
        2563
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 15
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "SUB"
    },
    "1053": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2537,
        2563
      ],
      "op": "AND",
      "path": "1"
    },
    "1054": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2537,
        2554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x426"
    },
    "1057": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2545,
        2553
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1058": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2537,
        2544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x267"
    },
    "1061": {
      "fn": "ERC721._transferFrom",
      "jump": "i",
      "offset": [
        2537,
        2554
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1062": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2537,
        2554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "SUB"
    },
    "1071": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2537,
        2563
      ],
      "op": "AND",
      "path": "1"
    },
    "1072": {
      "branch": 29,
      "fn": "ERC721._transferFrom",
      "offset": [
        2537,
        2563
      ],
      "op": "EQ",
      "path": "1"
    },
    "1073": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x499"
    },
    "1076": {
      "branch": 29,
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1077": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1079": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1088": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1091": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1093": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1094": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "ADD",
      "path": "1"
    },
    "1095": {
      "op": "MSTORE"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "ADD"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "PUSH32",
      "value": "0x547279696E6720746F207472616E73666572206120746F6B656E207468652061"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1138": {
      "op": "DUP3"
    },
    "1139": {
      "op": "ADD"
    },
    "1140": {
      "op": "MSTORE"
    },
    "1141": {
      "op": "PUSH20",
      "value": "0x64647265737320646F6573206E6F74206F776E21"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1167": {
      "op": "DUP3"
    },
    "1168": {
      "op": "ADD"
    },
    "1169": {
      "op": "MSTORE"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "1176": {
      "op": "JUMP"
    },
    "1177": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2516,
        2641
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1184": {
      "op": "SHL"
    },
    "1185": {
      "op": "SUB"
    },
    "1186": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 16
    },
    "1187": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "AND",
      "path": "1"
    },
    "1188": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1190": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1191": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1192": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1193": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2669
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1195": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1197": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1198": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1200": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1201": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2676
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1202": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2688
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BA"
    },
    "1205": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2688
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1206": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x537"
    },
    "1209": {
      "fn": "ERC721._transferFrom",
      "jump": "i",
      "offset": [
        2652,
        2688
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1210": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2652,
        2688
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1217": {
      "op": "SHL"
    },
    "1218": {
      "op": "SUB"
    },
    "1219": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 17
    },
    "1220": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "AND",
      "path": "1"
    },
    "1221": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1223": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1224": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1225": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1226": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2715
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1228": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1230": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1231": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1233": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1234": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2720
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1235": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2732
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DB"
    },
    "1238": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2732
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1239": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x548"
    },
    "1242": {
      "fn": "ERC721._transferFrom",
      "jump": "i",
      "offset": [
        2698,
        2732
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1243": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2698,
        2732
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1244": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x0"
    },
    "1246": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1247": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1248": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1249": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1251": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1253": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1254": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1256": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1257": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1258": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1259": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1260": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1267": {
      "op": "SHL"
    },
    "1268": {
      "op": "SUB"
    },
    "1269": {
      "op": "NOT"
    },
    "1270": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "AND",
      "path": "1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1277": {
      "op": "SHL"
    },
    "1278": {
      "op": "SUB"
    },
    "1279": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1280": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1281": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "AND",
      "path": "1"
    },
    "1282": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1283": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1284": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "OR",
      "path": "1"
    },
    "1285": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1286": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1287": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2770
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1288": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2786,
        2816
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 19
    },
    "1289": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2786,
        2816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1290": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1291": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2743,
        2764
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1292": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2786,
        2816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1293": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2786,
        2816
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1294": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2786,
        2816
      ],
      "op": "AND",
      "path": "1"
    },
    "1295": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2786,
        2816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1296": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2786,
        2816
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1329": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2786,
        2816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1330": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2786,
        2816
      ],
      "op": "LOG4",
      "path": "1"
    },
    "1331": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2281,
        2823
      ],
      "op": "POP",
      "path": "1"
    },
    "1332": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2281,
        2823
      ],
      "op": "POP",
      "path": "1"
    },
    "1333": {
      "fn": "ERC721._transferFrom",
      "offset": [
        2281,
        2823
      ],
      "op": "POP",
      "path": "1"
    },
    "1334": {
      "fn": "ERC721._transferFrom",
      "jump": "o",
      "offset": [
        2281,
        2823
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1335": {
      "fn": "Counters.decrement",
      "offset": [
        446,
        554
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1336": {
      "fn": "Counters.decrement",
      "offset": [
        526,
        540
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 20
    },
    "1337": {
      "fn": "Counters.decrement",
      "offset": [
        526,
        540
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1338": {
      "fn": "Counters.decrement",
      "offset": [
        526,
        547
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x544"
    },
    "1341": {
      "fn": "Counters.decrement",
      "offset": [
        526,
        547
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1342": {
      "fn": "Counters.decrement",
      "offset": [
        545,
        546
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1344": {
      "fn": "Counters.decrement",
      "offset": [
        526,
        544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x565"
    },
    "1347": {
      "fn": "Counters.decrement",
      "jump": "i",
      "offset": [
        526,
        547
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1348": {
      "fn": "Counters.decrement",
      "offset": [
        526,
        547
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1349": {
      "fn": "Counters.decrement",
      "offset": [
        509,
        547
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1350": {
      "fn": "Counters.decrement",
      "offset": [
        509,
        547
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1351": {
      "fn": "Counters.decrement",
      "jump": "o",
      "offset": [
        446,
        554
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1352": {
      "fn": "Counters.increment",
      "offset": [
        351,
        440
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1353": {
      "fn": "Counters.increment",
      "offset": [
        432,
        433
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 21,
      "value": "0x1"
    },
    "1355": {
      "fn": "Counters.increment",
      "offset": [
        414,
        421
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1356": {
      "fn": "Counters.increment",
      "offset": [
        414,
        428
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1358": {
      "fn": "Counters.increment",
      "offset": [
        414,
        428
      ],
      "op": "ADD",
      "path": "7"
    },
    "1359": {
      "fn": "Counters.increment",
      "offset": [
        414,
        428
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1361": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1362": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1363": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1364": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x55D"
    },
    "1367": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1368": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1369": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6C8"
    },
    "1372": {
      "fn": "Counters.increment",
      "jump": "i",
      "offset": [
        414,
        433
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1373": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1374": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1375": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1376": {
      "fn": "Counters.increment",
      "offset": [
        414,
        433
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1377": {
      "op": "POP"
    },
    "1378": {
      "op": "POP"
    },
    "1379": {
      "op": "POP"
    },
    "1380": {
      "fn": "Counters.increment",
      "jump": "o",
      "offset": [
        351,
        440
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1381": {
      "fn": "SafeMath.sub",
      "offset": [
        287,
        465
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1382": {
      "fn": "SafeMath.sub",
      "offset": [
        345,
        352
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1384": {
      "fn": "SafeMath.sub",
      "offset": [
        377,
        378
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 22
    },
    "1385": {
      "fn": "SafeMath.sub",
      "offset": [
        372,
        373
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1386": {
      "fn": "SafeMath.sub",
      "offset": [
        372,
        378
      ],
      "op": "GT",
      "path": "8"
    },
    "1387": {
      "branch": 30,
      "fn": "SafeMath.sub",
      "offset": [
        372,
        378
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1388": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5B7"
    },
    "1391": {
      "branch": 30,
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1392": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1394": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1395": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1401": {
      "op": "SHL"
    },
    "1402": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1403": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1406": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1408": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1409": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "ADD",
      "path": "8"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1415": {
      "op": "DUP3"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "op": "PUSH32",
      "value": "0x536166656D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1453": {
      "op": "DUP3"
    },
    "1454": {
      "op": "ADD"
    },
    "1455": {
      "op": "MSTORE"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x187"
    },
    "1462": {
      "op": "JUMP"
    },
    "1463": {
      "fn": "SafeMath.sub",
      "offset": [
        364,
        413
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1464": {
      "fn": "SafeMath.sub",
      "offset": [
        423,
        432
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1466": {
      "fn": "SafeMath.sub",
      "offset": [
        435,
        440
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5C3"
    },
    "1469": {
      "fn": "SafeMath.sub",
      "offset": [
        439,
        440
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1470": {
      "fn": "SafeMath.sub",
      "offset": [
        435,
        436
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1471": {
      "fn": "SafeMath.sub",
      "offset": [
        435,
        440
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6E0"
    },
    "1474": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        435,
        440
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1475": {
      "fn": "SafeMath.sub",
      "offset": [
        435,
        440
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1476": {
      "fn": "SafeMath.sub",
      "offset": [
        423,
        440
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1477": {
      "fn": "SafeMath.sub",
      "offset": [
        287,
        465
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "op": "POP"
    },
    "1480": {
      "op": "POP"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        287,
        465
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1483": {
      "op": "JUMPDEST"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1488": {
      "op": "DUP3"
    },
    "1489": {
      "op": "DUP5"
    },
    "1490": {
      "op": "SUB"
    },
    "1491": {
      "op": "SLT"
    },
    "1492": {
      "op": "ISZERO"
    },
    "1493": {
      "op": "PUSH2",
      "value": "0x5DD"
    },
    "1496": {
      "op": "JUMPI"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1499": {
      "op": "DUP1"
    },
    "1500": {
      "op": "REVERT"
    },
    "1501": {
      "op": "JUMPDEST"
    },
    "1502": {
      "op": "DUP2"
    },
    "1503": {
      "op": "CALLDATALOAD"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "SUB"
    },
    "1512": {
      "op": "NOT"
    },
    "1513": {
      "op": "DUP2"
    },
    "1514": {
      "op": "AND"
    },
    "1515": {
      "op": "DUP2"
    },
    "1516": {
      "op": "EQ"
    },
    "1517": {
      "op": "PUSH2",
      "value": "0x5F5"
    },
    "1520": {
      "op": "JUMPI"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1523": {
      "op": "DUP1"
    },
    "1524": {
      "op": "REVERT"
    },
    "1525": {
      "op": "JUMPDEST"
    },
    "1526": {
      "op": "SWAP4"
    },
    "1527": {
      "op": "SWAP3"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "jump": "o",
      "op": "JUMP"
    },
    "1532": {
      "op": "JUMPDEST"
    },
    "1533": {
      "op": "DUP1"
    },
    "1534": {
      "op": "CALLDATALOAD"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1541": {
      "op": "SHL"
    },
    "1542": {
      "op": "SUB"
    },
    "1543": {
      "op": "DUP2"
    },
    "1544": {
      "op": "AND"
    },
    "1545": {
      "op": "DUP2"
    },
    "1546": {
      "op": "EQ"
    },
    "1547": {
      "op": "PUSH2",
      "value": "0x613"
    },
    "1550": {
      "op": "JUMPI"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1553": {
      "op": "DUP1"
    },
    "1554": {
      "op": "REVERT"
    },
    "1555": {
      "op": "JUMPDEST"
    },
    "1556": {
      "op": "SWAP2"
    },
    "1557": {
      "op": "SWAP1"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "jump": "o",
      "op": "JUMP"
    },
    "1560": {
      "op": "JUMPDEST"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1563": {
      "op": "DUP1"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1566": {
      "op": "DUP4"
    },
    "1567": {
      "op": "DUP6"
    },
    "1568": {
      "op": "SUB"
    },
    "1569": {
      "op": "SLT"
    },
    "1570": {
      "op": "ISZERO"
    },
    "1571": {
      "op": "PUSH2",
      "value": "0x62B"
    },
    "1574": {
      "op": "JUMPI"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1577": {
      "op": "DUP1"
    },
    "1578": {
      "op": "REVERT"
    },
    "1579": {
      "op": "JUMPDEST"
    },
    "1580": {
      "op": "PUSH2",
      "value": "0x634"
    },
    "1583": {
      "op": "DUP4"
    },
    "1584": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1587": {
      "jump": "i",
      "op": "JUMP"
    },
    "1588": {
      "op": "JUMPDEST"
    },
    "1589": {
      "op": "SWAP5"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1592": {
      "op": "SWAP4"
    },
    "1593": {
      "op": "SWAP1"
    },
    "1594": {
      "op": "SWAP4"
    },
    "1595": {
      "op": "ADD"
    },
    "1596": {
      "op": "CALLDATALOAD"
    },
    "1597": {
      "op": "SWAP4"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "op": "POP"
    },
    "1601": {
      "jump": "o",
      "op": "JUMP"
    },
    "1602": {
      "op": "JUMPDEST"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1605": {
      "op": "DUP1"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1610": {
      "op": "DUP5"
    },
    "1611": {
      "op": "DUP7"
    },
    "1612": {
      "op": "SUB"
    },
    "1613": {
      "op": "SLT"
    },
    "1614": {
      "op": "ISZERO"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x657"
    },
    "1618": {
      "op": "JUMPI"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1621": {
      "op": "DUP1"
    },
    "1622": {
      "op": "REVERT"
    },
    "1623": {
      "op": "JUMPDEST"
    },
    "1624": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "1627": {
      "op": "DUP5"
    },
    "1628": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1631": {
      "jump": "i",
      "op": "JUMP"
    },
    "1632": {
      "op": "JUMPDEST"
    },
    "1633": {
      "op": "SWAP3"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "PUSH2",
      "value": "0x66E"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1640": {
      "op": "DUP6"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1645": {
      "jump": "i",
      "op": "JUMP"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "op": "SWAP2"
    },
    "1648": {
      "op": "POP"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1651": {
      "op": "DUP5"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "CALLDATALOAD"
    },
    "1654": {
      "op": "SWAP1"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "op": "SWAP3"
    },
    "1657": {
      "op": "POP"
    },
    "1658": {
      "op": "SWAP3"
    },
    "1659": {
      "op": "POP"
    },
    "1660": {
      "op": "SWAP3"
    },
    "1661": {
      "jump": "o",
      "op": "JUMP"
    },
    "1662": {
      "op": "JUMPDEST"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1667": {
      "op": "DUP3"
    },
    "1668": {
      "op": "DUP5"
    },
    "1669": {
      "op": "SUB"
    },
    "1670": {
      "op": "SLT"
    },
    "1671": {
      "op": "ISZERO"
    },
    "1672": {
      "op": "PUSH2",
      "value": "0x690"
    },
    "1675": {
      "op": "JUMPI"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1678": {
      "op": "DUP1"
    },
    "1679": {
      "op": "REVERT"
    },
    "1680": {
      "op": "JUMPDEST"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "op": "CALLDATALOAD"
    },
    "1683": {
      "op": "SWAP2"
    },
    "1684": {
      "op": "SWAP1"
    },
    "1685": {
      "op": "POP"
    },
    "1686": {
      "jump": "o",
      "op": "JUMP"
    },
    "1687": {
      "op": "JUMPDEST"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1692": {
      "op": "DUP3"
    },
    "1693": {
      "op": "DUP5"
    },
    "1694": {
      "op": "SUB"
    },
    "1695": {
      "op": "SLT"
    },
    "1696": {
      "op": "ISZERO"
    },
    "1697": {
      "op": "PUSH2",
      "value": "0x6A9"
    },
    "1700": {
      "op": "JUMPI"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1703": {
      "op": "DUP1"
    },
    "1704": {
      "op": "REVERT"
    },
    "1705": {
      "op": "JUMPDEST"
    },
    "1706": {
      "op": "PUSH2",
      "value": "0x5F5"
    },
    "1709": {
      "op": "DUP3"
    },
    "1710": {
      "op": "PUSH2",
      "value": "0x5FC"
    },
    "1713": {
      "jump": "i",
      "op": "JUMP"
    },
    "1714": {
      "op": "JUMPDEST"
    },
    "1715": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1722": {
      "op": "SHL"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1730": {
      "op": "MSTORE"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1735": {
      "op": "REVERT"
    },
    "1736": {
      "op": "JUMPDEST"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1739": {
      "op": "DUP3"
    },
    "1740": {
      "op": "NOT"
    },
    "1741": {
      "op": "DUP3"
    },
    "1742": {
      "op": "GT"
    },
    "1743": {
      "op": "ISZERO"
    },
    "1744": {
      "op": "PUSH2",
      "value": "0x6DB"
    },
    "1747": {
      "op": "JUMPI"
    },
    "1748": {
      "op": "PUSH2",
      "value": "0x6DB"
    },
    "1751": {
      "op": "PUSH2",
      "value": "0x6B2"
    },
    "1754": {
      "jump": "i",
      "op": "JUMP"
    },
    "1755": {
      "op": "JUMPDEST"
    },
    "1756": {
      "op": "POP"
    },
    "1757": {
      "op": "ADD"
    },
    "1758": {
      "op": "SWAP1"
    },
    "1759": {
      "jump": "o",
      "op": "JUMP"
    },
    "1760": {
      "op": "JUMPDEST"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1763": {
      "op": "DUP3"
    },
    "1764": {
      "op": "DUP3"
    },
    "1765": {
      "op": "LT"
    },
    "1766": {
      "op": "ISZERO"
    },
    "1767": {
      "op": "PUSH2",
      "value": "0x6F2"
    },
    "1770": {
      "op": "JUMPI"
    },
    "1771": {
      "op": "PUSH2",
      "value": "0x6F2"
    },
    "1774": {
      "op": "PUSH2",
      "value": "0x6B2"
    },
    "1777": {
      "jump": "i",
      "op": "JUMP"
    },
    "1778": {
      "op": "JUMPDEST"
    },
    "1779": {
      "op": "POP"
    },
    "1780": {
      "op": "SUB"
    },
    "1781": {
      "op": "SWAP1"
    },
    "1782": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a85a14a097d829baf6295aac9af3dc353ff12a7b",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.10;\n\n/*\n Crear funcion para mintear tokens\n        1. NFT debe apuntar a una direccion\n        2. Mantener registro de los ids de los tokens\n        3. Mantener registro del dueno (direccion) del token id\n        4. Cuantos tokens tiene un dueno (direccion)\n        5. crear un evento que emita un registro de transferencia - direcci\u00c3\u00b3n del contrato, \n         d\u00c3\u00b3nde se est\u00c3\u00a1 minteo, el id\n*/\n\nimport \"./ERC165.sol\";\nimport \"../interfaces/IERC721.sol\";\nimport \"./libraries/Counters.sol\";\n\ncontract ERC721 is ERC165, IERC721 {\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n\n    mapping(uint256 => address) private _tokenOwner;\n\n    mapping(address => Counters.Counter) private _ownedTokensCount;\n\n    // direccion verificar tokens aprovados\n    mapping(uint256 => address) private _tokenApprovals;\n\n    constructor() {\n        _registerInterface(\n            bytes4(\n                keccak256(\"balanceOf(bytes4)\") ^\n                    keccak256(\"ownerOf(bytes4)\") ^\n                    keccak256(\"transferFrom(bytes4)\")\n            )\n        );\n    }\n\n    function balanceOf(address _owner) public view override returns (uint256) {\n        require(_owner != address(0), \"Address is zero\");\n        return _ownedTokensCount[_owner].current();\n    }\n\n    function ownerOf(uint256 _tokenId) public view override returns (address) {\n        address owner = _tokenOwner[_tokenId];\n        require(owner != address(0), \"Address is zero\");\n        return owner;\n    }\n\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        address owner = _tokenOwner[tokenId];\n        return owner != address(0);\n    }\n\n    function _mint(address to, uint256 tokenId) internal virtual {\n        // revisar que el address no sea cero!\n        require(to != address(0), \"ERC721 minting to zero address\");\n        // tokenId debe No existir anteriormente\n        require(!_exists(tokenId), \"ERC721 already exists\");\n\n        //Apuntar a direccoin del dueno\n        _tokenOwner[tokenId] = to;\n        // Cuantos tokens tiene ese dueno\n        _ownedTokensCount[to].increment();\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    // debemos llamar esta funcion para aumetnar seguridad\n    function _transferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId\n    ) internal {\n        require(\n            _to != address(0),\n            \"Error - ERC721 Transfer to the zero address\"\n        );\n        require(\n            ownerOf(_tokenId) == _from,\n            \"Trying to transfer a token the address does not own!\"\n        );\n\n        _ownedTokensCount[_from].decrement();\n        _ownedTokensCount[_to].increment();\n\n        _tokenOwner[_tokenId] = _to;\n\n        emit Transfer(_from, _to, _tokenId);\n    }\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _tokenId\n    ) public override {\n        require(isApprovedOrOwner(msg.sender, _tokenId));\n        _transferFrom(_from, _to, _tokenId);\n    }\n\n    function approve(address _to, uint256 tokenId) public {\n        address owner = ownerOf(tokenId);\n        require(_to != owner, \"Error - approval to current owner\");\n        require(msg.sender == owner, \"Current caller must be owner\");\n        _tokenApprovals[tokenId] = _to;\n        emit Approval(owner, _to, tokenId);\n    }\n\n    function isApprovedOrOwner(\n        address spender,\n        uint256 tokenId\n    ) internal view returns (bool) {\n        require(_exists(tokenId), \"token does not exist\");\n        address owner = ownerOf(tokenId);\n        return (spender == owner);\n    }\n}\n",
  "sourceMap": "550:3097:1:-:0;;;890:248;;;;;;;;;-1:-1:-1;211:66:0;237:38;211:18;:66::i;:::-;914:217:1;970:137;914:18;:217::i;:::-;550:3097;;452:187:0;-1:-1:-1;;;;;;527:25:0;;;;;519:63;;;;-1:-1:-1;;;519:63:0;;216:2:13;519:63:0;;;198:21:13;255:2;235:18;;;228:30;294:27;274:18;;;267:55;339:18;;519:63:0;;;;;;;;-1:-1:-1;;;;;;592:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;592:40:0;628:4;592:40;;;452:187::o;14:349:13:-;550:3097:1;;;;;;",
  "sourcePath": "contracts/ERC721.sol",
  "type": "contract"
}